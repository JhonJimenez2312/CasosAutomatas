/* Generated By:JavaCC: Do not edit this line. testTokenManager.java */

/** Token Manager. */
public class testTokenManager implements testConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      default :
         return jjMoveNfa_0(0, 0);
   }
}
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 183;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 5);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 3:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 5:
                  if (curChar == 45)
                     jjCheckNAddStates(6, 10);
                  break;
               case 7:
               case 10:
               case 22:
               case 27:
               case 35:
               case 37:
               case 48:
               case 53:
               case 61:
               case 65:
               case 75:
               case 77:
               case 90:
               case 95:
               case 104:
               case 106:
               case 119:
               case 121:
               case 133:
               case 138:
               case 147:
               case 149:
               case 162:
               case 164:
               case 176:
               case 181:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 9:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(11, 16);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if (curChar == 45)
                     jjCheckNAddStates(17, 19);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(9);
                  break;
               case 17:
                  if (curChar == 45)
                     jjCheckNAdd(18);
                  break;
               case 18:
                  if (curChar == 45)
                     jjCheckNAddStates(20, 22);
                  break;
               case 19:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(23, 25);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 24:
                  if (curChar == 45)
                     jjCheckNAddStates(23, 25);
                  break;
               case 25:
                  if (curChar == 45)
                     jjCheckNAddStates(31, 35);
                  break;
               case 26:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(26, 27);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(21);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(26);
                  break;
               case 30:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(30, 31);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 33:
                  if (curChar == 45)
                     jjCheckNAddStates(36, 40);
                  break;
               case 36:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(41, 46);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(40);
                  break;
               case 40:
                  if (curChar == 45)
                     jjCheckNAddStates(47, 49);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(34);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(36);
                  break;
               case 44:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(44, 45);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(53, 56);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(52);
                  break;
               case 52:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 54:
                  if (curChar == 45)
                     jjCheckNAddStates(57, 61);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(56);
                  break;
               case 56:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(59);
                  break;
               case 59:
                  if (curChar == 45)
                     jjCheckNAddStates(62, 64);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(65, 69);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(64);
                  break;
               case 64:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(63, 64);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(70, 73);
                  break;
               case 68:
                  if (curChar == 45)
                     jjCheckNAddStates(74, 78);
                  break;
               case 69:
                  if (curChar == 45)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if (curChar == 45)
                     jjCheckNAddStates(79, 81);
                  break;
               case 71:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 73:
                  if (curChar == 45)
                     jjCheckNAddStates(82, 86);
                  break;
               case 76:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(87, 92);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 80:
                  if (curChar == 45)
                     jjCheckNAddStates(93, 95);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(74);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(76);
                  break;
               case 84:
                  if (curChar == 45)
                     jjCheckNAddStates(96, 105);
                  break;
               case 85:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(87);
                  break;
               case 87:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(87, 88);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(106, 108);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(109, 113);
                  break;
               case 92:
                  if (curChar == 45)
                     jjCheckNAddStates(106, 108);
                  break;
               case 93:
                  if (curChar == 45)
                     jjCheckNAddStates(114, 118);
                  break;
               case 94:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(94, 95);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(89);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(94);
                  break;
               case 98:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 101);
                  break;
               case 102:
                  if (curChar == 45)
                     jjCheckNAddStates(119, 123);
                  break;
               case 105:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(124, 129);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(109);
                  break;
               case 109:
                  if (curChar == 45)
                     jjCheckNAddStates(130, 132);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(103);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(105);
                  break;
               case 113:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(113, 114);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(115);
                  break;
               case 115:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 117:
                  if (curChar == 45)
                     jjCheckNAddStates(133, 137);
                  break;
               case 120:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(120, 121);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(138, 143);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(124);
                  break;
               case 124:
                  if (curChar == 45)
                     jjCheckNAddStates(144, 146);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(118);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(120);
                  break;
               case 128:
                  if (curChar == 45)
                     jjCheckNAddStates(147, 149);
                  break;
               case 129:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(129, 130);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(150, 152);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(153, 157);
                  break;
               case 135:
                  if (curChar == 45)
                     jjCheckNAddStates(150, 152);
                  break;
               case 136:
                  if (curChar == 45)
                     jjCheckNAddStates(158, 162);
                  break;
               case 137:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(137, 138);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(132);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(137);
                  break;
               case 141:
                  if (curChar == 45)
                     jjCheckNAddStates(163, 165);
                  break;
               case 142:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(142, 143);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 145:
                  if (curChar == 45)
                     jjCheckNAddStates(166, 170);
                  break;
               case 148:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(171, 176);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(152);
                  break;
               case 152:
                  if (curChar == 45)
                     jjCheckNAddStates(177, 179);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(146);
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(148);
                  break;
               case 156:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(157, 156);
                  break;
               case 157:
                  if (curChar == 45)
                     jjCheckNAddStates(180, 182);
                  break;
               case 158:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(158, 159);
                  break;
               case 160:
                  if (curChar == 45)
                     jjCheckNAddStates(183, 187);
                  break;
               case 163:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(163, 164);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(188, 193);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(167);
                  break;
               case 167:
                  if (curChar == 45)
                     jjCheckNAddStates(194, 196);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(161);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(163);
                  break;
               case 171:
                  if (curChar == 45)
                     jjCheckNAddStates(197, 199);
                  break;
               case 172:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(200, 202);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(203, 206);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(175);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(180);
                  break;
               case 180:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(180, 181);
                  break;
               case 182:
                  if (curChar == 45)
                     jjCheckNAddStates(207, 211);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffeL & l) != 0L)
                     jjAddStates(212, 213);
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(214, 215);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 6:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 13:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 16:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(219, 223);
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(18);
                  break;
               case 18:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(20, 22);
                  break;
               case 19:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 21:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(21, 22);
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(23, 25);
                  break;
               case 25:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 26:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(26, 27);
                  break;
               case 30:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(224, 225);
                  break;
               case 32:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(226, 228);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(36, 40);
                  break;
               case 34:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 36:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(47, 49);
                  break;
               case 43:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(229, 233);
                  break;
               case 44:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(234, 235);
                  break;
               case 47:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(47, 48);
                  break;
               case 52:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 54:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(57, 61);
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(236, 237);
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(62, 64);
                  break;
               case 60:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(60, 61);
                  break;
               case 64:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 68:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(74, 78);
                  break;
               case 69:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(79, 81);
                  break;
               case 71:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 72:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(238, 240);
                  break;
               case 73:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(82, 86);
                  break;
               case 74:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 76:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 80:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(93, 95);
                  break;
               case 83:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(241, 245);
                  break;
               case 84:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(96, 105);
                  break;
               case 85:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(246, 247);
                  break;
               case 89:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(89, 90);
                  break;
               case 92:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(106, 108);
                  break;
               case 93:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(114, 118);
                  break;
               case 94:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(94, 95);
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 101:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(248, 250);
                  break;
               case 102:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(119, 123);
                  break;
               case 103:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(103, 104);
                  break;
               case 105:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 109:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(130, 132);
                  break;
               case 112:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(251, 255);
                  break;
               case 113:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(113, 114);
                  break;
               case 115:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(256, 257);
                  break;
               case 116:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(258, 260);
                  break;
               case 117:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(133, 137);
                  break;
               case 118:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(118, 119);
                  break;
               case 120:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(120, 121);
                  break;
               case 124:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(144, 146);
                  break;
               case 127:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(261, 265);
                  break;
               case 128:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(147, 149);
                  break;
               case 129:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(129, 130);
                  break;
               case 130:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(130, 131);
                  break;
               case 132:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(132, 133);
                  break;
               case 135:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(150, 152);
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(158, 162);
                  break;
               case 137:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(137, 138);
                  break;
               case 141:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(163, 165);
                  break;
               case 142:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(142, 143);
                  break;
               case 144:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(266, 268);
                  break;
               case 145:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(166, 170);
                  break;
               case 146:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(146, 147);
                  break;
               case 148:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 152:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(177, 179);
                  break;
               case 155:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(269, 273);
                  break;
               case 156:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(157, 156);
                  break;
               case 157:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(180, 182);
                  break;
               case 158:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(158, 159);
                  break;
               case 159:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(274, 276);
                  break;
               case 160:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(183, 187);
                  break;
               case 161:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(161, 162);
                  break;
               case 163:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(163, 164);
                  break;
               case 167:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(194, 196);
                  break;
               case 170:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(277, 281);
                  break;
               case 171:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(197, 199);
                  break;
               case 172:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 175:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(175, 176);
                  break;
               case 180:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(180, 181);
                  break;
               case 182:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(207, 211);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 183 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   2, 17, 30, 44, 55, 69, 6, 9, 10, 11, 5, 12, 13, 14, 6, 15, 
   9, 6, 11, 5, 19, 20, 18, 21, 23, 25, 24, 28, 21, 29, 26, 21, 
   26, 27, 23, 25, 34, 36, 37, 38, 33, 39, 40, 41, 34, 42, 36, 34, 
   38, 33, 47, 49, 54, 50, 47, 51, 52, 47, 52, 53, 49, 54, 60, 62, 
   68, 60, 63, 64, 66, 67, 60, 63, 64, 66, 60, 64, 65, 62, 68, 71, 
   72, 70, 74, 76, 77, 78, 73, 79, 80, 81, 74, 82, 76, 74, 78, 73, 
   85, 86, 98, 99, 113, 114, 128, 141, 156, 171, 89, 91, 93, 92, 96, 89, 
   97, 94, 89, 94, 95, 91, 93, 103, 105, 106, 107, 102, 108, 109, 110, 103, 
   111, 105, 103, 107, 102, 118, 120, 121, 122, 117, 123, 124, 125, 118, 126, 120, 
   118, 122, 117, 129, 130, 128, 132, 134, 136, 135, 139, 132, 140, 137, 132, 137, 
   138, 134, 136, 142, 143, 141, 146, 148, 149, 150, 145, 151, 152, 153, 146, 154, 
   148, 146, 150, 145, 158, 159, 157, 161, 163, 164, 165, 160, 166, 167, 168, 161, 
   169, 163, 161, 165, 160, 172, 173, 171, 175, 177, 182, 178, 175, 179, 180, 175, 
   180, 181, 177, 182, 1, 84, 3, 4, 5, 11, 16, 6, 7, 5, 11, 16, 
   30, 31, 33, 38, 43, 34, 35, 33, 38, 43, 44, 45, 56, 57, 73, 78, 
   83, 74, 75, 73, 78, 83, 87, 88, 102, 107, 112, 103, 104, 102, 107, 112, 
   115, 116, 117, 122, 127, 118, 119, 117, 122, 127, 145, 150, 155, 146, 147, 145, 
   150, 155, 160, 165, 170, 161, 162, 160, 165, 170, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x801L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[183];
static private final int[] jjstateSet = new int[366];
static protected char curChar;
/** Constructor. */
public testTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public testTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 183; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
