/* Generated By:JavaCC: Do not edit this line. testTokenManager.java */

/** Token Manager. */
public class testTokenManager implements testConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      default :
         return jjMoveNfa_0(0, 0);
   }
}
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 180;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 5);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 3:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(6, 9);
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(7);
                  break;
               case 7:
                  if (curChar == 45)
                     jjCheckNAddStates(10, 12);
                  break;
               case 9:
                  if (curChar == 45)
                     jjCheckNAddStates(13, 17);
                  break;
               case 10:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(18, 20);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(21, 26);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(8);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(27, 33);
                  break;
               case 16:
                  if (curChar == 45)
                     jjCheckNAdd(17);
                  break;
               case 17:
                  if (curChar == 45)
                     jjCheckNAddStates(34, 36);
                  break;
               case 18:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(37, 39);
                  break;
               case 21:
                  if (curChar == 45)
                     jjCheckNAddStates(40, 44);
                  break;
               case 22:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(45, 47);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(48, 52);
                  break;
               case 25:
                  if (curChar == 45)
                     jjCheckNAddStates(37, 39);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(53, 55);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(20);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(56, 61);
                  break;
               case 29:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(29, 30);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(62, 65);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if (curChar == 45)
                     jjCheckNAddStates(66, 68);
                  break;
               case 36:
                  if (curChar == 45)
                     jjCheckNAddStates(69, 73);
                  break;
               case 37:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(74, 76);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(77, 82);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(35);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(83, 89);
                  break;
               case 43:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(90, 92);
                  break;
               case 47:
                  if (curChar == 45)
                     jjCheckNAddStates(93, 97);
                  break;
               case 48:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(98, 100);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(101, 104);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(46);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(51, 46);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(105, 109);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(55);
                  break;
               case 55:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(55, 56);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(57, 58);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(58);
                  break;
               case 58:
                  if (curChar == 45)
                     jjCheckNAddStates(110, 112);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(113, 115);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(116, 118);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 63);
                  break;
               case 63:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(63, 64);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(58, 56);
                  break;
               case 65:
                  if (curChar == 45)
                     jjCheckNAddStates(119, 123);
                  break;
               case 66:
                  if (curChar == 45)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if (curChar == 45)
                     jjCheckNAddStates(124, 126);
                  break;
               case 68:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(127, 130);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(72);
                  break;
               case 72:
                  if (curChar == 45)
                     jjCheckNAddStates(131, 133);
                  break;
               case 74:
                  if (curChar == 45)
                     jjCheckNAddStates(134, 138);
                  break;
               case 75:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(139, 141);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(142, 147);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(73);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(148, 154);
                  break;
               case 81:
                  if (curChar == 45)
                     jjCheckNAddStates(155, 164);
                  break;
               case 82:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(84);
                  break;
               case 84:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(84, 85);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(165, 167);
                  break;
               case 87:
                  if (curChar == 45)
                     jjCheckNAddStates(168, 172);
                  break;
               case 88:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(88, 89);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(173, 175);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(176, 180);
                  break;
               case 91:
                  if (curChar == 45)
                     jjCheckNAddStates(165, 167);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(181, 183);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(86);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(184, 189);
                  break;
               case 95:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(96, 98);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(190, 193);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(101);
                  break;
               case 101:
                  if (curChar == 45)
                     jjCheckNAddStates(194, 196);
                  break;
               case 103:
                  if (curChar == 45)
                     jjCheckNAddStates(197, 201);
                  break;
               case 104:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(104, 105);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(202, 204);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(205, 210);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(102);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(211, 217);
                  break;
               case 110:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(112);
                  break;
               case 112:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(112, 113);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(218, 221);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(116);
                  break;
               case 116:
                  if (curChar == 45)
                     jjCheckNAddStates(222, 224);
                  break;
               case 118:
                  if (curChar == 45)
                     jjCheckNAddStates(225, 229);
                  break;
               case 119:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(119, 120);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(230, 232);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(233, 238);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(117);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(239, 245);
                  break;
               case 125:
                  if (curChar == 45)
                     jjCheckNAddStates(246, 248);
                  break;
               case 126:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(126, 127);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(249, 251);
                  break;
               case 130:
                  if (curChar == 45)
                     jjCheckNAddStates(252, 256);
                  break;
               case 131:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(131, 132);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(257, 259);
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(260, 264);
                  break;
               case 134:
                  if (curChar == 45)
                     jjCheckNAddStates(249, 251);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(265, 267);
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(129);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(268, 273);
                  break;
               case 138:
                  if (curChar == 45)
                     jjCheckNAddStates(274, 276);
                  break;
               case 139:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(139, 140);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(277, 280);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(144);
                  break;
               case 144:
                  if (curChar == 45)
                     jjCheckNAddStates(281, 283);
                  break;
               case 146:
                  if (curChar == 45)
                     jjCheckNAddStates(284, 288);
                  break;
               case 147:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(147, 148);
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(289, 291);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(292, 297);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(145);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(298, 304);
                  break;
               case 153:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(154, 153);
                  break;
               case 154:
                  if (curChar == 45)
                     jjCheckNAddStates(305, 307);
                  break;
               case 155:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(155, 156);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(308, 311);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(159);
                  break;
               case 159:
                  if (curChar == 45)
                     jjCheckNAddStates(312, 314);
                  break;
               case 161:
                  if (curChar == 45)
                     jjCheckNAddStates(315, 319);
                  break;
               case 162:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(162, 163);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(320, 322);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(323, 328);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(160);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(329, 335);
                  break;
               case 168:
                  if (curChar == 45)
                     jjCheckNAddStates(336, 338);
                  break;
               case 169:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(169, 170);
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(339, 341);
                  break;
               case 173:
                  if (curChar == 45)
                     jjCheckNAddStates(342, 346);
                  break;
               case 174:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(174, 175);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(347, 349);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(350, 353);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(177, 172);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(354, 358);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffeL & l) != 0L)
                     jjAddStates(359, 360);
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(361, 362);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(363, 365);
                  break;
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(10, 12);
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(366, 368);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(13, 17);
                  break;
               case 10:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 15:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(369, 374);
                  break;
               case 16:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(17);
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(34, 36);
                  break;
               case 18:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(375, 377);
                  break;
               case 21:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(40, 44);
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 25:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(37, 39);
                  break;
               case 29:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(378, 379);
                  break;
               case 31:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(380, 382);
                  break;
               case 34:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(66, 68);
                  break;
               case 35:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(383, 385);
                  break;
               case 36:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(69, 73);
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 42:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(386, 391);
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(392, 393);
                  break;
               case 46:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(394, 396);
                  break;
               case 47:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(93, 97);
                  break;
               case 48:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(397, 398);
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(110, 112);
                  break;
               case 59:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(399, 401);
                  break;
               case 63:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(63, 64);
                  break;
               case 65:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(119, 123);
                  break;
               case 66:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(124, 126);
                  break;
               case 68:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 69:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(402, 404);
                  break;
               case 72:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(131, 133);
                  break;
               case 73:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(405, 407);
                  break;
               case 74:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(134, 138);
                  break;
               case 75:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 80:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(408, 413);
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(155, 164);
                  break;
               case 82:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 84:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(414, 415);
                  break;
               case 86:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(416, 418);
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(168, 172);
                  break;
               case 88:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(88, 89);
                  break;
               case 91:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(165, 167);
                  break;
               case 95:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 98:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(419, 421);
                  break;
               case 101:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(194, 196);
                  break;
               case 102:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(422, 424);
                  break;
               case 103:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(197, 201);
                  break;
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(104, 105);
                  break;
               case 109:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(425, 430);
                  break;
               case 110:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 112:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(431, 432);
                  break;
               case 113:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(433, 435);
                  break;
               case 116:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  break;
               case 117:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(436, 438);
                  break;
               case 118:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(225, 229);
                  break;
               case 119:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(119, 120);
                  break;
               case 124:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(439, 444);
                  break;
               case 125:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 126:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(126, 127);
                  break;
               case 127:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(127, 128);
                  break;
               case 129:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(445, 447);
                  break;
               case 130:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(252, 256);
                  break;
               case 131:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(131, 132);
                  break;
               case 134:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(249, 251);
                  break;
               case 138:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(274, 276);
                  break;
               case 139:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(139, 140);
                  break;
               case 141:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(448, 450);
                  break;
               case 144:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(281, 283);
                  break;
               case 145:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(451, 453);
                  break;
               case 146:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(284, 288);
                  break;
               case 147:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(147, 148);
                  break;
               case 152:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(454, 459);
                  break;
               case 153:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(154, 153);
                  break;
               case 154:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(305, 307);
                  break;
               case 155:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(155, 156);
                  break;
               case 156:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(460, 462);
                  break;
               case 159:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(312, 314);
                  break;
               case 160:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(463, 465);
                  break;
               case 161:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(315, 319);
                  break;
               case 162:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(162, 163);
                  break;
               case 167:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(466, 471);
                  break;
               case 168:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(336, 338);
                  break;
               case 169:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(169, 170);
                  break;
               case 172:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(472, 474);
                  break;
               case 173:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(342, 346);
                  break;
               case 174:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(174, 175);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 180 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   2, 16, 29, 43, 54, 66, 6, 7, 13, 8, 8, 5, 9, 8, 10, 11, 
   9, 5, 8, 9, 12, 6, 7, 13, 8, 5, 9, 6, 7, 13, 8, 5, 
   9, 12, 18, 19, 17, 20, 26, 21, 20, 22, 23, 21, 26, 20, 21, 24, 
   25, 27, 20, 26, 21, 25, 27, 20, 25, 27, 20, 26, 21, 24, 33, 34, 
   40, 35, 35, 32, 36, 35, 37, 38, 36, 32, 35, 36, 39, 33, 34, 40, 
   35, 32, 36, 33, 34, 40, 35, 32, 36, 39, 46, 47, 52, 46, 48, 49, 
   47, 52, 46, 47, 50, 51, 46, 47, 52, 51, 46, 47, 52, 50, 59, 61, 
   65, 57, 58, 56, 62, 59, 63, 59, 63, 64, 61, 65, 68, 69, 67, 71, 
   72, 78, 73, 73, 70, 74, 73, 75, 76, 74, 70, 73, 74, 77, 71, 72, 
   78, 73, 70, 74, 71, 72, 78, 73, 70, 74, 77, 82, 83, 95, 96, 110, 
   111, 125, 138, 153, 168, 86, 92, 87, 86, 88, 89, 87, 92, 86, 87, 90, 
   91, 93, 86, 92, 87, 91, 93, 86, 91, 93, 86, 92, 87, 90, 100, 101, 
   107, 102, 102, 99, 103, 102, 104, 105, 103, 99, 102, 103, 106, 100, 101, 107, 
   102, 99, 103, 100, 101, 107, 102, 99, 103, 106, 115, 116, 122, 117, 117, 114, 
   118, 117, 119, 120, 118, 114, 117, 118, 121, 115, 116, 122, 117, 114, 118, 115, 
   116, 122, 117, 114, 118, 121, 126, 127, 125, 129, 135, 130, 129, 131, 132, 130, 
   135, 129, 130, 133, 134, 136, 129, 135, 130, 134, 136, 129, 134, 136, 129, 135, 
   130, 133, 139, 140, 138, 143, 144, 150, 145, 145, 142, 146, 145, 147, 148, 146, 
   142, 145, 146, 149, 143, 144, 150, 145, 142, 146, 143, 144, 150, 145, 142, 146, 
   149, 155, 156, 154, 158, 159, 165, 160, 160, 157, 161, 160, 162, 163, 161, 157, 
   160, 161, 164, 158, 159, 165, 160, 157, 161, 158, 159, 165, 160, 157, 161, 164, 
   169, 170, 168, 172, 173, 178, 172, 174, 175, 173, 178, 172, 173, 176, 177, 172, 
   173, 178, 177, 172, 173, 178, 176, 1, 81, 3, 4, 5, 9, 15, 8, 9, 
   14, 8, 9, 14, 5, 9, 15, 20, 21, 28, 29, 30, 32, 36, 42, 35, 
   36, 41, 35, 36, 41, 32, 36, 42, 43, 44, 46, 47, 53, 55, 56, 58, 
   59, 60, 70, 74, 80, 73, 74, 79, 73, 74, 79, 70, 74, 80, 84, 85, 
   86, 87, 94, 99, 103, 109, 102, 103, 108, 102, 103, 108, 99, 103, 109, 112, 
   113, 114, 118, 124, 117, 118, 123, 117, 118, 123, 114, 118, 124, 129, 130, 137, 
   142, 146, 152, 145, 146, 151, 145, 146, 151, 142, 146, 152, 157, 161, 167, 160, 
   161, 166, 160, 161, 166, 157, 161, 167, 172, 173, 179, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x801L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[180];
static private final int[] jjstateSet = new int[360];
static protected char curChar;
/** Constructor. */
public testTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public testTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 180; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
